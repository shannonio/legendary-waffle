{"ast":null,"code":"/**\n * 2011 Peter 'Pita' Martischka\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar domain;\ntry {\n  domain = require('domain');\n} catch (e) {\n  //domains only exist in 0.8+\n}\nexports.channels = function (operatorFunction) {\n  this.channels = {};\n  this.operatorFunction = operatorFunction;\n};\nexports.channels.prototype.emit = function (channelname, object) {\n  var _this = this;\n\n  //this channel already exists, add it to the queue\n  if (_this.channels[channelname]) {\n    if (domain && domain.active) {\n      object.__domain = domain.active;\n    }\n    _this.channels[channelname].push(object);\n  }\n  //this channel is new, create it and start it\n  else {\n    //create the channel array\n    _this.channels[channelname] = [];\n    _this.operatorFunction(object, function iterator() {\n      //get the next element\n      var next = _this.channels[channelname].shift();\n\n      //if there is nothing todo anymore in this channel, clean it up\n      if (next !== undefined) {\n        // if this method has a domain, call it in the domain\n        if (next.__domain) {\n          var activeDomain = next.__domain;\n          delete next.__domain;\n          activeDomain.run(function () {\n            _this.operatorFunction(next, iterator);\n          });\n        } else {\n          _this.operatorFunction(next, iterator);\n        }\n      } else {\n        delete _this.channels[channelname];\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}